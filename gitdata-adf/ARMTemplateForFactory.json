{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "gitdata-adf"
		},
		"LS_ADLS_RawData_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gitdatastorage.dfs.core.windows.net/"
		},
		"LS_HTTP_GHArchive_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.gharchive.org"
		},
		"TR_Tumbling_Hourly_properties_pipeline_parameters_trigger_time": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTimeã„´"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Ingest_GHArchive_Hourly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_GHArchiveJsonGz",
								"type": "DatasetReference",
								"parameters": {
									"year": {
										"value": "@formatDateTime(variables('safe_trigger_time'), 'yyyy')",
										"type": "Expression"
									},
									"month": {
										"value": "@formatDateTime(variables('safe_trigger_time'), 'MM')",
										"type": "Expression"
									},
									"day": {
										"value": "@formatDateTime(variables('safe_trigger_time'), 'dd')",
										"type": "Expression"
									},
									"hour": {
										"value": "@string(int(formatDateTime(variables('safe_trigger_time'), 'HH')))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_GHArchiveJson",
								"type": "DatasetReference",
								"parameters": {
									"dynamic_filename": {
										"value": "@concat(formatDateTime(variables('safe_trigger_time'), 'yyyy-MM-dd-HH'), '.json')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "safe_trigger_time",
							"value": {
								"value": "@addHours(pipeline().parameters.trigger_time, -4)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"trigger_time": {
						"type": "string",
						"defaultValue": "2025-09-01T10:00:00Z"
					}
				},
				"variables": {
					"safe_trigger_time": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_HTTP_GHArchiveJsonGz')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_GHArchiveJson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_GHArchiveJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_RawData",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dynamic_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().dynamic_filename",
							"type": "Expression"
						},
						"folderPath": "gharchive",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_RawData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_HTTP_GHArchiveJsonGz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_HTTP_GHArchive",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year": {
						"type": "string"
					},
					"month": {
						"type": "string"
					},
					"day": {
						"type": "string"
					},
					"hour": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@{dataset().year}-@{dataset().month}-@{dataset().day}-@{dataset().hour}.json.gz",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "gzip"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_HTTP_GHArchive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_RawData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_RawData_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_HTTP_GHArchive')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_HTTP_GHArchive_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_Tumbling_Hourly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PL_Ingest_GHArchive_Hourly",
						"type": "PipelineReference"
					},
					"parameters": {
						"trigger_time": "[parameters('TR_Tumbling_Hourly_properties_pipeline_parameters_trigger_time')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 60,
					"startTime": "2025-09-03T00:09:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Ingest_GHArchive_Hourly')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Backfill_GHArchive')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0, int(div(sub(ticks(pipeline().parameters.endDate), ticks(pipeline().parameters.startDate)), 36000000000)))",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_Ingest_GHArchive_Hourly",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"trigger_time": {
												"value": "@addHours(pipeline().parameters.startDate, item())",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"startDate": {
						"type": "string",
						"defaultValue": "2015-01-01T00:00:00Z"
					},
					"endDate": {
						"type": "string",
						"defaultValue": "@utcNow()"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Ingest_GHArchive_Hourly')]"
			]
		}
	]
}